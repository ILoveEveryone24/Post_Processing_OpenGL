#version 330 core

layout (location = 0) in vec3 aPos;
layout (location = 1) in vec3 aNormal;

uniform mat4 mvp;
uniform mat4 mvp2;
uniform mat4 model;
uniform mat4 model2;

out vec3 color;
out vec3 FragPos;
out vec3 Normal;

void main(){
	if(gl_VertexID < 6){
		gl_Position = mvp2 * vec4(aPos, 1.0);
		color = vec3(0.4, 0.2, 0.7);
		FragPos = vec3(model2 * vec4(aPos, 1.0));
	}
	else{
		gl_Position = mvp * vec4(aPos, 1.0);
		color = vec3(1.0, 1.0, 1.0);
		FragPos = vec3(model * vec4(aPos, 1.0));
	}
	Normal = mat3(transpose(inverse(model))) * aNormal;
}
